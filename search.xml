<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>路由</title>
      <link href="/2020/09/01/lu-you/"/>
      <url>/2020/09/01/lu-you/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我测试五星的人。<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span></p></blockquote><img src="/2020/09/01/lu-you/AM.png" class="" title="This is an example image"><blockquote><p>我测试五星的人。</p></blockquote><img src="/2020/09/01/lu-you/AM.png" class="" title="This is an example image"><img src="/2020/09/01/lu-you/ab.png" class="" title="THis is an example image"><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyperf路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hyperf路由</title>
      <link href="/2020/09/01/15956423117442/"/>
      <url>/2020/09/01/15956423117442/</url>
      
        <content type="html"><![CDATA[<h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1><ul><li><p>本框架定义的路由参数必须和控制器参数键名、类型保持一致，否则控制器无法接受到相关参数</p></li><li><p>总共有 3 种级别的中间件，分别为 全局中间件、类级别中间件、方法级别中间件，如果都定义了这些中间件，执行顺序为：全局中间件 -&gt; 类级别中间件 -&gt; 方法级别中间件。</p></li><li><p>如果注入时声明为 PSR-7 标准的 Psr\Http\Message\ServerRequestInterface 接口，则框架会自动转换为等同于 Hyperf\HttpServer\Contract\RequestInterface 的 Hyperf\HttpServer\Request 对象。</p></li><li><p>使用 input, inputs 方法可以从整个请求中获取输入数据（包括 Query 参数），而 query(?string $key = null, $default = null) 方法可以只从查询字符串中获取输入数据</p></li><li><p>如果请求的 Body 数据格式是 JSON，则只要 请求对象(Request) 的 Content-Type Header 值 正确设置为 application/json，就可以通过 input(string $key, $default = null) 方法访问 JSON 数据，你甚至可以使用 「点」语法来读取 JSON 数组</p></li></ul><h2 id="参数捕获和正则表达式"><a href="#参数捕获和正则表达式" class="headerlink" title="参数捕获和正则表达式"></a>参数捕获和正则表达式</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// Matches /user/foo/bar as well</span><span class="token variable">$r</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'/user/{name:.+}'</span><span class="token punctuation">,</span> <span class="token string">'handler'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Custom patterns for route placeholders <code>cannot use capturing groups</code>. For example <code>{lang:(en|de)}</code> is not a valid placeholder, because <code>()</code> is a capturing group. Instead you can use either <code>{lang:en|de}</code> or <code>{lang:(?:en|de)}</code>.</p><p>Furthermore parts of the route enclosed in <code>[...]</code> are considered optional, so that <code>/foo[bar]</code> will match both <code>/foo</code> and <code>/foobar</code>. Optional parts are only supported in a <code>trailing position</code>, not in the middle of a route.</p><p><img src="/media/15956423117442/Screen%20Shot%202020-08-19%20at%201.19.42%20PM.png" alt="Screen Shot 2020-08-19 at 1.19.42 PM"></p><h2 id="路由字符串解析"><a href="#路由字符串解析" class="headerlink" title="路由字符串解析"></a>路由字符串解析</h2><ol><li><code>/abc/</code>与<code>/abc/</code>是不相同的两个路由。如果自定义了<code>/abc/</code>，如果访问<code>/abc</code>则会出现<code>404错误</code>。可以在路由定义时，在结尾添加<code>[/]</code>可选路由片段。</li><li>路由子片段为参数捕获时，这个子片段对应的为一个数组，不包含前后的<code>/</code>,前后的反斜线，会依附于一个紧贴着的字面量的路由子片段：</li><li>如果紧贴着的还是一个参数捕获子片段，则(<code>/</code>)本身就是一个路由子片段，单独占一个索引，其值为字符串<code>/</code>。</li><li>捕获参数子片段前后的非捕获路由片段，都会解析为<code>数字索引=&gt;字符串</code>。</li></ol><p>当路由中包括捕获参数的语法：</p><p><img src="/media/15956423117442/Screen%20Shot%202020-08-19%20at%201.19.42%20PM.png" alt="Screen Shot 2020-08-19 at 1.19.42 PM"></p><p>如路由：<code>/user/{id:\d+}</code><br><code>routeData</code>的第一维成员【索引0的数组】，的子元素为路由字符串解析过的结果。</p><p>索引<code>0</code>对应的为字符串类型，从路由开始一直到参数捕获定义起始点。索引<code>1</code>对应的为一个数组，其索引<code>0</code>为捕获参数的名称，索引<code>1</code>为对应的正则表达式。</p><p>路由：<code>/email/verify/{id}/{hash}</code><br>只设置了捕获参数的名称，没有对应的正则表达式，其默认正则表达式为：<code>[^/]+</code>。</p><p><img src="/media/15956423117442/Screen%20Shot%202020-08-19%20at%201.25.25%20PM.png" alt="Screen Shot 2020-08-19 at 1.25.25 PM"></p><p>当不包含捕获参数时，路由解析数组的<code>0</code>索引对应的为一个数组，而非字符串。<br>如路由：<code>/abc/</code><br><img src="/media/15956423117442/Screen%20Shot%202020-08-19%20at%201.27.16%20PM.png" alt="Screen Shot 2020-08-19 at 1.27.16 PM"></p><p>其<code>routeData</code>的子数组的<code>0</code>索引值为一个数组而非字符串。</p><ol><li>路由子片段为参数捕获时，这个子片段对应的为一个数组，不包含前后的<code>/</code>,前后的反斜线，会依附于一个紧贴着的字面量的路由子片段：</li><li>如果紧贴着的还是一个参数捕获子片段，则(<code>/</code>)本身就是一个路由子片段，单独占一个索引，其值为字符串<code>/</code>。</li><li>捕获参数子片段前后的非捕获路由片段，都会解析为<code>数字索引=&gt;字符串</code>。</li></ol><p>如路由：<code>/email/verify/{id}/{hash}</code> </p><hr><ul><li><code>/email/verify/</code>因为其后为参数捕获片段，所以其解析为字符串。</li><li>因为<code>{id}</code>为参数捕获片段，所以其解析为数组。</li><li><code>/</code> 因为其前后都是参数捕获片段，所以其解析为字符串。</li></ul><hr><pre class="line-numbers language-php"><code class="language-php"> <span class="token string">"email.verify"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">5</span> <span class="token punctuation">[</span>    <span class="token string">"server"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"http"</span>    <span class="token string">"route"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/email/verify/{id}/{hash}"</span>    <span class="token string">"method"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token punctuation">[</span>      <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"GET"</span>    <span class="token punctuation">]</span>    <span class="token string">"routeData"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token punctuation">[</span>      <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">4</span> <span class="token punctuation">[</span>        <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/email/verify/"</span>        <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">[</span>          <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"id"</span>          <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"[^/]+"</span>        <span class="token punctuation">]</span>        <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/"</span>        <span class="token number">3</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">[</span>          <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"hash"</span>          <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"[^/]+"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">]</span>    <span class="token punctuation">]</span>    <span class="token string">"option"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token punctuation">[</span>      <span class="token string">"name"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"email.verify"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>路由 <code>/abc/{id:\d+}/def/</code></p><ul><li><code>/abc/</code>之后为参数捕获片段，<strong>其前后非参数捕获片段都解析为字符串</strong>。</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token string">"endWithSlash"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">5</span> <span class="token punctuation">[</span>    <span class="token string">"server"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"http"</span>    <span class="token string">"route"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/abc/{id:\d+}/def/"</span>    <span class="token string">"method"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token punctuation">[</span>      <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"GET"</span>    <span class="token punctuation">]</span>    <span class="token string">"routeData"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token punctuation">[</span>      <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">3</span> <span class="token punctuation">[</span>        <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/abc/"</span>        <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">[</span>          <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"id"</span>          <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"\d+"</span>        <span class="token punctuation">]</span>        <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"/def/"</span>      <span class="token punctuation">]</span>    <span class="token punctuation">]</span>    <span class="token string">"option"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">array</span><span class="token punctuation">:</span><span class="token number">1</span> <span class="token punctuation">[</span>      <span class="token string">"name"</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"endWithSlash"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>路由分发器 和 路由数据收集器都是由 <code>\Hyperf\HttpServer\Router\DispatcherFactory</code>类来初始化的，因为<code>Hyperf</code>可以创建多个服务实例，所以每个服务可以有各自的路由分发器和路由数据收集器。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$routers</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'http'</span><span class="token operator">=</span><span class="token operator">></span>Hyperf\<span class="token package">Http<span class="token punctuation">\</span>Server<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>RouterCollector</span>实例<span class="token punctuation">]</span><span class="token variable">$dispatchers</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'http'</span><span class="token operator">=</span><span class="token operator">></span>FastRoute\<span class="token package">Dispatcher<span class="token punctuation">\</span>GroupCountBased</span>实例<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>路由收集器结合保存在<code>$routes</code>属性里,比<code>$dispatchers</code>先创建。在构造DispatcherFactory时创建。<br>路由分发器保存在<code>$dispatchers</code>属性里,在初始化核心路由中间件时，调用<code>getDispatcher($naem)</code>时创建。</p><p><img src="/media/15956423117442/15959553595176.jpg" alt="-w565"><br>实例化并调用<code>getDispatcher($ServerName)</code>之后的对象<br><img src="/media/15956423117442/Screen%20Shot%202020-07-29%20at%201.21.41%20AM.png" alt="-w520"></p><p><code>/user/{id:\d+}</code><br><code>/usr/1</code><br><img src="/media/15956423117442/15978224361122.jpg" alt="-w455"></p><p>下面这个<code>1={array}[1]</code>对应<code>[0=&gt;'id']</code>;可以与正则表达式相结合，获得<code>handler</code>回调中的参数数组。即用正则表达式去匹配请求<code>uri</code>然后，获得捕获的参数。然后和参数名相结合，最终可以获得以下参数数组<code>['id'=&gt;1]</code>。</p><h2 id="路由配置来源"><a href="#路由配置来源" class="headerlink" title="路由配置来源"></a>路由配置来源</h2><h3 id="配置文件config-routes-php"><a href="#配置文件config-routes-php" class="headerlink" title="配置文件config/routes.php"></a>配置文件<code>config/routes.php</code></h3><p>配置文件由<code>Hyperf\HttpServer\Router\DispatchFactory</code><br><code>  protected $routes = [BASE_PATH . '/config/routes.php'];</code>属性定义路径。</p><p><em>Hyperf\HttpServer\Router\DispatcherFactory</em>@<code>__construct()</code></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">initAnnotationRoute</span><span class="token punctuation">(</span>AnnotationCollector<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用注解注册</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">initConfigRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读取配置文件注册</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解析控制器类注解来添加路由"><a href="#解析控制器类注解来添加路由" class="headerlink" title="解析控制器类注解来添加路由"></a>解析控制器类注解来添加路由</h3><h2 id="添加路由的调用路线"><a href="#添加路由的调用路线" class="headerlink" title="添加路由的调用路线"></a>添加路由的调用路线</h2><ul><li>通过配置文件添加路由,调用路线</li></ul><pre class="line-numbers language-php"><code class="language-php">RegexBasedAbstract<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">29</span><span class="token punctuation">,</span> FastRoute\<span class="token package">DataGenerator<span class="token punctuation">\</span>GroupCountBased</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>RouteCollector<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">72</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>RouteCollector</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Router<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">39</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>Router</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">__callStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>routes<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>Router</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>routes<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token punctuation">)</span>DispatcherFactory<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">70</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>DispatcherFactory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">initConfigRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>DispatcherFactory<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>DispatcherFactory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>解析控制器类注解来添加路由，调用路线</li></ul><pre class="line-numbers language-php"><code class="language-php">RegexBasedAbstract<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">85</span><span class="token punctuation">,</span> FastRoute\<span class="token package">DataGenerator<span class="token punctuation">\</span>GroupCountBased</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addStaticRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>RegexBasedAbstract<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">,</span> FastRoute\<span class="token package">DataGenerator<span class="token punctuation">\</span>GroupCountBased</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>RouteCollector<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">72</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>RouteCollector</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>DispatcherFactory<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">185</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>DispatcherFactory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">handleController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>DispatcherFactory<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>DispatcherFactory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">initAnnotationRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li>从启动到<code>Hyperf\HttpServer\Router\DispatcherFactory</code>的初始化。</li></ul><pre class="line-numbers language-php"><code class="language-php">DispatcherFactory<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">51</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>DispatcherFactory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ObjectResolver<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>ObjectResolver</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ObjectResolver<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">66</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>ObjectResolver</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ResolverDispatcher<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">59</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>ResolverDispatcher</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Container<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">182</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">resolveDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Container<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">82</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Container<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">117</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>CoreMiddleware<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">138</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>CoreMiddleware</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>CoreMiddleware<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">71</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>CoreMiddleware</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ObjectResolver<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">99</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>ObjectResolver</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ObjectResolver<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">66</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>ObjectResolver</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ResolverDispatcher<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">59</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>ResolverDispatcher</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Container<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">182</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">resolveDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Container<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">82</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Di<span class="token punctuation">\</span>Container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Functions<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">413</span><span class="token punctuation">,</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Server<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">164</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Server</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createCoreMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Server<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">94</span><span class="token punctuation">,</span> Hyperf\<span class="token package">HttpServer<span class="token punctuation">\</span>Server</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">initCoreMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Server<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">205</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Server<span class="token punctuation">\</span>Server</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">registerSwooleEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Server<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">102</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Server<span class="token punctuation">\</span>Server</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">initServers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Server<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">72</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Server<span class="token punctuation">\</span>Server</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ServerFactory<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">56</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Server<span class="token punctuation">\</span>ServerFactory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>StartServer<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">52</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Server<span class="token punctuation">\</span>Command<span class="token punctuation">\</span>StartServer</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Command<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">258</span><span class="token punctuation">,</span> Hyperf\<span class="token package">Server<span class="token punctuation">\</span>Command<span class="token punctuation">\</span>StartServer</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Application<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">929</span><span class="token punctuation">,</span> Symfony\<span class="token package">Component<span class="token punctuation">\</span>Console<span class="token punctuation">\</span>Application</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">doRunCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Application<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">264</span><span class="token punctuation">,</span> Symfony\<span class="token package">Component<span class="token punctuation">\</span>Console<span class="token punctuation">\</span>Application</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">doRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span>Application<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">140</span><span class="token punctuation">,</span> Symfony\<span class="token package">Component<span class="token punctuation">\</span>Console<span class="token punctuation">\</span>Application</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>hyperf<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>closure<span class="token punctuation">:</span><span class="token operator">/</span>home<span class="token operator">/</span>vagrant<span class="token operator">/</span>code<span class="token operator">/</span>hyperf<span class="token operator">/</span>hyperf<span class="token operator">-</span>skeleton<span class="token operator">/</span>bin<span class="token operator">/</span>hyperf<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">15</span><span class="token operator">-</span><span class="token number">35</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>hyperf<span class="token punctuation">.</span>php<span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>main<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="路由设定"><a href="#路由设定" class="headerlink" title="路由设定"></a>路由设定</h2><h3 id="配置文件静态路由添加"><a href="#配置文件静态路由添加" class="headerlink" title="配置文件静态路由添加"></a>配置文件静态路由添加</h3><ul><li>使用字符串捕获url参数</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// Matches /user/foobar, but not /user/foo/bar</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'/user/{name}'</span><span class="token punctuation">,</span> <span class="token string">'handler'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>参数名为`name`<span class="token punctuation">,</span>值为uri中`<span class="token operator">/</span>user<span class="token operator">/</span>`后面的值<span class="token comment" spellcheck="true">// Matches /user/foo/bar as well</span><span class="token variable">$r</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'/user/{name:.+}'</span><span class="token punctuation">,</span> <span class="token string">'handler'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Matches /user/42, but not /user/xyz</span><span class="token variable">$r</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'/user/{id:\d+}'</span><span class="token punctuation">,</span> <span class="token string">'handler'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>动态路由处理</p><p>route定义 ：<code>Router::addRoute(['GET', 'POST', 'HEAD'], '/user/{id:\d+}', 'App\Controller\IndexController@index'); </code><br>url: <code>http://homestead.test:9501/user/123</code></p><p><em>\FastRoute\Dispatcher\GroupCountBased</em>::<code>dispatchVariableRoute</code></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>$routeData Array</code></p><p><img src="/media/15956423117442/Screen%20Shot%202020-07-28%20at%207.26.58%20AM.png" alt="Screen Shot 2020-07-28 at 7.26.58 AM-w455"></p><p><code>$uri String</code><br><code>$uri=/user/123</code></p><h3 id="配置文件动态路由添加"><a href="#配置文件动态路由添加" class="headerlink" title="配置文件动态路由添加"></a>配置文件动态路由添加</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>Router</span><span class="token punctuation">;</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/get'</span><span class="token punctuation">,</span> <span class="token string">'App\Controller\IndexController::get'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/get'</span><span class="token punctuation">,</span> <span class="token string">'App\Controller\IndexController@get'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/get'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\<span class="token package">App<span class="token punctuation">\</span>Controller<span class="token punctuation">\</span>IndexController</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">'get'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'HEAD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'/multi'</span><span class="token punctuation">,</span> <span class="token string">'App\Controller\IndexController::multi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'HEAD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'/multi'</span><span class="token punctuation">,</span> <span class="token string">'App\Controller\IndexController@multi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Router<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'HEAD'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'/multi'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\<span class="token package">App<span class="token punctuation">\</span>Controller<span class="token punctuation">\</span>IndexController</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">'multi'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre class="line-numbers language-php"><code class="language-php"> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">initCoreMiddleware</span><span class="token punctuation">(</span>string <span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">:</span> void    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">serverName</span> <span class="token operator">=</span> <span class="token variable">$serverName</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">coreMiddleware</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createCoreMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">routerDispatcher</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createDispatcher</span><span class="token punctuation">(</span><span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span>ConfigInterface<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middlewares</span> <span class="token operator">=</span> <span class="token variable">$config</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'middlewares.'</span> <span class="token punctuation">.</span> <span class="token variable">$serverName</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">exceptionHandlers</span> <span class="token operator">=</span> <span class="token variable">$config</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'exceptions.handler.'</span> <span class="token punctuation">.</span> <span class="token variable">$serverName</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getDefaultExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="保存路由的类【路由收集器的代理】"><a href="#保存路由的类【路由收集器的代理】" class="headerlink" title="保存路由的类【路由收集器的代理】"></a>保存路由的类【路由收集器的代理】</h3><p><code>\FastRoute\DataGenerator\GroupCountBased</code></p><p>此类<code>UML</code>图<br><img src="/media/15956423117442/Screen%20Shot%202020-07-28%20at%2010.24.14%20AM.png" alt="-w417"></p><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><h5 id="staticRoutes"><a href="#staticRoutes" class="headerlink" title="$staticRoutes"></a>$staticRoutes</h5><p>保存静态路由的数组</p><pre class="line-numbers language-php"><code class="language-php">  <span class="token comment" spellcheck="true">/** @var mixed[][] */</span>    <span class="token keyword">protected</span> <span class="token variable">$staticRoutes</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="methodToRegexToRoutesMap"><a href="#methodToRegexToRoutesMap" class="headerlink" title="$methodToRegexToRoutesMap"></a>$methodToRegexToRoutesMap</h5><p>保存动态路由的数组</p><pre class="line-numbers language-php"><code class="language-php">    <span class="token comment" spellcheck="true">/** @var Route[][] */</span>    <span class="token keyword">protected</span> <span class="token variable">$methodToRegexToRoutesMap</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><h5 id="addRoute"><a href="#addRoute" class="headerlink" title="addRoute"></a>addRoute</h5><p>在配置文件<code>routes</code>中调用<code>Router::addRoute</code>方法，然后转发到其<code>__callStatic</code>方法，其调用其静态属性<code>$factory</code>[<code>\Hyperf\HttpServer\Router\DispatcherFactory</code>]实例的<code>getRouter</code>返回的[<code>Hyperf\HttpServer\Router\RouterCollector</code>]实例来处理<code>addRoute</code>的调用。即<code>Hyperf\HttpServer\Router\RouterCollector</code>为<code>Hyperf\HttpServer\Router\Router</code>的代理。</p><p><code>RouterCollector</code>收到参数后，在格式化，交给其<code>dataGenerator </code>属性保存的<code>\FastRoute\DataGenerator\GroupCountBased</code>实例的<a href="#addroute">addroute</a>方法处理。<code>GroupCountBased</code>最终根据数据类型分别保存到其<code>$staticRoute</code>和<code>$methodToRegexToRoutesMap</code>属性。</p><p>RouterCollector类<code>UML</code>图：<br><img src="/media/15956423117442/Screen%20Shot%202020-07-28%20at%2010.35.08%20AM.png" alt="-w373"></p><h2 id="使用路由"><a href="#使用路由" class="headerlink" title="使用路由"></a>使用路由</h2><h3 id="服务启动前赋值给核心中间件"><a href="#服务启动前赋值给核心中间件" class="headerlink" title="服务启动前赋值给核心中间件"></a>服务启动前赋值给核心中间件</h3><p><img src="/media/15956423117442/Screen%20Shot%202020-07-29%20at%202.46.29%20AM.png" alt="-w413"></p><p><em>\Hyperf\HttpServer\Server</em>::<code>initCoreMiddleware</code></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">initCoreMiddleware</span><span class="token punctuation">(</span>string <span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">:</span> void    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">serverName</span> <span class="token operator">=</span> <span class="token variable">$serverName</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">coreMiddleware</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createCoreMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">routerDispatcher</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createDispatcher</span><span class="token punctuation">(</span><span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>\Hyperf\HttpServer\CoreMiddleware</em>::<code>__construct</code></p><pre class="line-numbers language-php"><code class="language-php">  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span>ContainerInterface <span class="token variable">$container</span><span class="token punctuation">,</span> string <span class="token variable">$serverName</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">container</span> <span class="token operator">=</span> <span class="token variable">$container</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">dispatcher</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">createDispatcher</span><span class="token punctuation">(</span><span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>\Hyperf\HttpServer\CoreMiddleware</em>::<code>createDispatcher</code></p><pre class="line-numbers language-php"><code class="language-php">  <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">createDispatcher</span><span class="token punctuation">(</span>string <span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Dispatcher    <span class="token punctuation">{</span>        <span class="token variable">$factory</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">container</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span>DispatcherFactory<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//此方法第一次创建`DispatcherFactory`实例。</span>        <span class="token keyword">return</span> <span class="token variable">$factory</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getDispatcher</span><span class="token punctuation">(</span><span class="token variable">$serverName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//此方法第一次创建`FastRoute\Dispatcher\GroupCountBased`实例。</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li>在初始化路由中间件时，将路由分发器赋值给<code>$dispatcher</code>属性。路由中间件通过<code>servername</code>调用<code>DispatcherFactory</code>实例的<code>getDispatcher($servername)</code>方法。</li></ul><h3 id="请求阶段使用路由非法器来验证路由"><a href="#请求阶段使用路由非法器来验证路由" class="headerlink" title="请求阶段使用路由非法器来验证路由"></a>请求阶段使用路由非法器来验证路由</h3><ul><li>在请求处理阶段，<code>noRequest</code>事件绑定的回调中,调用路由中间件实例的<code>$dispatcher</code>属性上的<code>dispatch</code>方法。</li></ul><pre class="line-numbers language-php"><code class="language-php"> <span class="token variable">$psr7Request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">coreMiddleware</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$psr7Request</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//会转发给coreMiddleware实例的$dispatcher属性上的dispatch方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/media/15956423117442/Screen%20Shot%202020-07-29%20at%202.43.35%20AM.png" alt="-w319"></p><p><em>\Hyperf\HttpServer\CoreMiddleware</em>::<code>dispatch</code></p><pre class="line-numbers language-php"><code class="language-php"> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>ServerRequestInterface <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">:</span> ServerRequestInterface    <span class="token punctuation">{</span>        <span class="token variable">$routes</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">dispatcher</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$dispatched</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dispatched</span><span class="token punctuation">(</span><span class="token variable">$routes</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Context<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">set</span><span class="token punctuation">(</span>ServerRequestInterface<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">withAttribute</span><span class="token punctuation">(</span>Dispatched<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token variable">$dispatched</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><pre><code>/**     * Dispatches against the provided HTTP method verb and URI.     *     * @param array $array with one of the following formats:     *     *     [Dispatcher::NOT_FOUND]     *     [Dispatcher::METHOD_NOT_ALLOWED, ['GET', 'OTHER_ALLOWED_METHODS']]     *     [Dispatcher::FOUND, $handler, ['varName' =&gt; 'value', ...]]     */</code></pre><h3 id="Dispatched结构图"><a href="#Dispatched结构图" class="headerlink" title="Dispatched结构图"></a>Dispatched结构图</h3><p><img src="/media/15956423117442/Screen%20Shot%202020-07-29%20at%202.55.46%20AM.png"></p><p>闭包路由：<br><img src="/media/15956423117442/Screen%20Shot%202020-09-01%20at%207.46.18%20AM.png"><br>控制器路由<br><img src="/media/15956423117442/Screen%20Shot%202020-09-01%20at%207.41.34%20AM.png"></p><p>转发给了<br><em>\Hyperf\HttpServer\CoreMiddleware</em>::<code>dispatch</code></p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">/***@return \Hyperf\HttpServer\Router\Dispatched 实例*/</span> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$httpMethod</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span><span class="token punctuation">[</span><span class="token variable">$httpMethod</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$handler</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span><span class="token punctuation">[</span><span class="token variable">$httpMethod</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">,</span> <span class="token variable">$handler</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$varRouteData</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">variableRouteData</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$varRouteData</span><span class="token punctuation">[</span><span class="token variable">$httpMethod</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatchVariableRoute</span><span class="token punctuation">(</span><span class="token variable">$varRouteData</span><span class="token punctuation">[</span><span class="token variable">$httpMethod</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// For HEAD requests, attempt fallback to GET</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$httpMethod</span> <span class="token operator">===</span> <span class="token string">'HEAD'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$handler</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">,</span> <span class="token variable">$handler</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$varRouteData</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatchVariableRoute</span><span class="token punctuation">(</span><span class="token variable">$varRouteData</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// If nothing else matches, try fallback routes</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span><span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$handler</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span><span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">,</span> <span class="token variable">$handler</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$varRouteData</span><span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatchVariableRoute</span><span class="token punctuation">(</span><span class="token variable">$varRouteData</span><span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// Find allowed methods for this URI by matching against all other HTTP methods as well</span>        <span class="token variable">$allowedMethods</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">staticRouteMap</span> <span class="token keyword">as</span> <span class="token variable">$method</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$uriMap</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">!==</span> <span class="token variable">$httpMethod</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$uriMap</span><span class="token punctuation">[</span><span class="token variable">$uri</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$allowedMethods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$method</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//        return [self::FOUND, null, []];</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$varRouteData</span> <span class="token keyword">as</span> <span class="token variable">$method</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$routeData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">===</span> <span class="token variable">$httpMethod</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatchVariableRoute</span><span class="token punctuation">(</span><span class="token variable">$routeData</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FOUND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$allowedMethods</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$method</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// If there are no allowed methods the route simply does not exist</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$allowedMethods</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">METHOD_NOT_ALLOWED</span><span class="token punctuation">,</span> <span class="token variable">$allowedMethods</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="验证请求"><a href="#验证请求" class="headerlink" title="验证请求"></a>验证请求</h4><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$dispatched</span> <span class="token operator">=</span> <span class="token variable">$psr7Request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getAttribute</span><span class="token punctuation">(</span>Dispatched<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>根据 <span class="token variable">$dispatched</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">isFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 值来做出是否要使用路由配置文件里定义的中间件。<span class="token variable">$psr7Response</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">dispatcher</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token variable">$psr7Request</span><span class="token punctuation">,</span> <span class="token variable">$middlewares</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">coreMiddleware</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//交由http分发器来分发http请求。最后由HttpRequestHandler请求处理器来处理，结果要么抛出异常，要么正常返回响应。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyperf路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/09/01/hello-world/"/>
      <url>/2020/09/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
